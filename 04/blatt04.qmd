---
author:
    - Jonathan Barthelmes
    - Igor Dimitrov
    - Jacob Rose
---

# Uebersetzung ER-Schema in Relationenschemata

## Uebersetzung eines ER-Schemas

* $\texttt{Addresse}(\underline{\texttt{Ad\_ID}}\texttt{,}\, \texttt{PLZ, Stadt, Strasse, Hausnr})$
* $\textttt{MusikerIn}(\underline{\texttt{M\_ID}}, \texttt{Name, Geb\_Datum, Ad\_ID \(\rightarrow\) Addresse)}$
* $\textttt{Instrument}(\underline{\texttt{Name, Stimmung}})$
* $\textttt{spielt}(\underline{\texttt{M\_ID\(\rightarrow\)MusikerIn, (Name, Stimmung)\(\rightarrow\)Instrument}}, \texttt{bevorzugt})$
* $\textttt{Musikstueck}(\underline{\texttt{MS\_ID}}, \texttt{Titel, Laenge, M\_ID\(\rightarrow\)MusikerIn)}$
* $\textttt{Album}(\underline{\texttt{A\_ID}}, \texttt{Titel, Release\_Datum, Preis, Tracks, M\_ID\(\rightarrow\)MusikerIn)}$
* $\textttt{erscheint}(\underline{\texttt{M\_ID\(\rightarrow\)Musikstueck, A\_ID\(\rightarrow\)Album}}, \texttt{TrackNr})$
* $\textttt{spielt\_mit}(\underline{\texttt{M\_ID\(\rightarrow\)MusikerIn, MS\_ID\(\rightarrow\)Musikstueck}})$


## Uebersetzung eines ER-Schemas mit Hierarchien


1. *Relationales Schema*
   
* $\textttt{Personal}(\underline{\texttt{Pers\_ID}}, \texttt{GebDat, Name, Vorname})$
* $\textttt{MitarbeiterIn}(\underline{\texttt{Pers\_ID\(\rightarrow\)Personal}}, \texttt{Bonus})$
* $\textttt{KundIn}(\underline{\texttt{KundenID\(\rightarrow\)Personal}}, \texttt{Branche})$
* $\textttt{ManagerIn}(\underline{\texttt{Pers\_ID\(\rightarrow\)MitarbeiterIn}}, \texttt{Sektion})$
* $\textttt{ProgrammiererIn}(\underline{\texttt{Pers\_ID\(\rightarrow\)MitarbeiterIn}}, \texttt{Abschluss})$
* $\textttt{Programmiersprache}(\underline{\texttt{ProgSP}})$
* $\textttt{kann}(\underline{\texttt{ProgSP\(\rightarrow\)Programmiersprache, Pers\_ID\(\rightarrow\)ProgrammiererIn}}, \texttt{level})$

2. *Weitere Methoden fuer is-a*:

i) * **Vorteil**: Vermeidung der Redundanz und moeglichen Inkonsitenzenen, die dadurch enstehen koennen.
   * **Nachteil**: Erhoehter Rechenaufwand durch Zugriff auf Attribute der Oberentitaet nur mit Join. 
ii) * **Vorteil**: Vermindertee Rechenaufwand durch direkten Zugriff auf Attribute ueber Tupel einziger Relation.
    * **Nachteil**: Redundante Speicherung der gleichen Informationen. 
iii) * **Vorteil**: Vermindernde Komplexitaet des Datenbanks durch kleinere Anzahl von Relationen (eine Relation statt zwei oder drei)
     * **Nachteil**: Moegliche Inkonsitenzen durch den vielen Nullwerten, die von dem Nutzer bei Insertoperationen explizit als null gesetzt werden muessen.


## Feedback

```text
Punkte: 26/28

Zur Aufgabe 1:

Bei FremdschlÃ¼sselverweisen auf Relationen (z.B. in MusikerIn bitte sowas wie wohnt->Adresse) schreiben => -2P.

Rest der 1. passt.

Zur Aufgabe 2:

Zur 1:

Passt alles.

Zur 2:

Ebenfalls.
```