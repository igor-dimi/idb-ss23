[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IDB SS23 Solutions & Notes",
    "section": "",
    "text": "IDB SS 23 Loesungen & Notizen\nLoesungen der Uebungsaufgaben und Notizen von der Vorlesung Datenbanken Sommersemester 23 Uni Heidelberg."
  },
  {
    "objectID": "01/blatt01.html#grundlagen-der-logik",
    "href": "01/blatt01.html#grundlagen-der-logik",
    "title": "1  Blatt 1: Grundlagen der Relationalen Algebra",
    "section": "1.1 Grundlagen der Logik",
    "text": "1.1 Grundlagen der Logik\n\n\n\n\nWenn zwei Tiere im selben Lebensraum leben, essen sie auch das selbe.\nfalsch: \\(t_{1}\\) (Gepard) und \\(t_{9}\\) (Uganda-Grasantilope) haben den gleichen lebensraum “Regenwald” aber andere Ernaehrungen; Karnivore und bzw. Herbivore.\nerfuellbar: Jede Datenbank, die ein einziges Tier enthaelt erfuellt diese Aussage automatisch.\nFuer jedes Zootier existier ein anderes Zootier, welches entweder die selbe Nahrung isst oder im selben Lebensraum lebt. wahr\nEs existieren drei Zootiere, so dass erstes und zweites ,sowie zweites und drittes den gleichen Lebensraum teilen aber erstes und drittes nicht.\nfalsch und nicht erfuellbar: \\(l(x, y)\\) ist eine Aequivalenzrelation. Somit gilt Transitivitaet: \\(l(x, y) \\wedge l(y, z) \\rightarrow l(x, z)\\)\nEs gibt keine zwei unterschiedliche Tiere, die sowohl der gleichen Familie zugehoerig sind als auch den gleichen Lebensraum teilen.\nfalsch: \\(t_{6}\\) und \\(t_{10}\\) sind beide Sakiaffen mit dem Lebensraum Regenwald.\nerfuellbar: Jede Datenbank mit einem einzigen Element efuellt diese Aussage automatisch.\n\n\n\n\n\n\\(\\forall x\\in T \\exists y \\in T: x \\neq y\\wedge fam(x, y) \\wedge \\neg ls(x, y)\\)\n\\(\\forall x\\in T\\forall y\\in T: fam(x, y) \\wedge le(x, y) \\wedge er(x, y) \\rightarrow x = y\\)\n\\(\\forall x \\in T \\forall y\\in T: fam(x, y) \\rightarrow er(x, y)\\)"
  },
  {
    "objectID": "01/blatt01.html#relationale-algebra",
    "href": "01/blatt01.html#relationale-algebra",
    "title": "1  Blatt 1: Grundlagen der Relationalen Algebra",
    "section": "1.2 Relationale Algebra",
    "text": "1.2 Relationale Algebra\n\nGebe die Modelle von Flugzeugen, die so heissen, wie einer aus dem Personal.\n\n\n\nModell\n\n\n\n\nQuack\n\n\n\nGebe die crew ID der Mitarbeiter, die nicht an den afugelisteten Fluegen beteiligt sind.\n\n\n\ncid\n\n\n\n\nc090\n\n\n\nGebe die Flugnummer der Fluege, die in Deutschland starten.\n\n\n\nFlugnr\n\n\n\n\nDB2013\n\n\nDB2341\n\n\n\nGebe alle Modelle aus, fuer die eine Crew-Mitglied zugelassen ist.\n\n\n\nZulassung\n\n\n\n\nA320\n\n\nB787\n\n\nA380\n\n\nA340\n\n\nB747\n\n\n\nGebe alle Namen von Piloten aus, die fuer eine Maschine zugelassen sind mit Reichweite \\(\\leq 10000\\).\n\n\n\nName\n\n\n\n\nPan\n\n\nSchmitt\n\n\n\nGebe Start, Ziel und Modell fuer alle Modelle aus, die ungeiegnet fuer einen Flug sind, weil sie die Strecke nicht fliegen koennen.\n\n\n\nStart\nZiel\nModell\n\n\n\n\nFRA\nJFK\nA320\n\n\nJFK\nFRA\nA320\n\n\nCDG\nLAX\nA320\n\n\n\nWaehle aus Fluegen die gleichen Flugnummern, die an unterschiedlichen Tagen fliegen, d.h gebe Flugnummern der Fluegen, die Rundfahrten sind.\n\n\n\nFlugnr\n\n\n\n\nDB2013\n\n\n\nGebe die Laender aus, aus denen keine Flugzeuge starten.\n\n\n\nLand\n\n\n\n\nDeutschland"
  },
  {
    "objectID": "01/blatt01.html#datenmanagementsysteme",
    "href": "01/blatt01.html#datenmanagementsysteme",
    "title": "1  Blatt 1: Grundlagen der Relationalen Algebra",
    "section": "1.3 Datenmanagementsysteme",
    "text": "1.3 Datenmanagementsysteme\n\nXML und HTML basieren sich beide auf SGML - eine Metasprache, mit deren Hilfe man verschiedene Markup-sprachen fuer Dokumente definieren kann.\nXML ist eine erweiterbare Markup-sprache, die zur Darstellung & Speicherung hierarchisch strukturierter Daten und zur Definition & Entwicklung neuer Markup-sprachen verwendet wird. XML Dokumente haben eine Baumstruktur und bestehen aus Elemente, die durch Tags Ausgezeichnet werden. XML hat keinen vordifienerten Satz von Tags, wobei die genaue Struktur eines XML-Dokuments durch den Dokumenttypdefinition festgelegt werden kann.\nHTML beschreibt die semantische Struktur und Formattierung der Inhalte von Webseiten und war urspruenglich eine Anwendung von SGML. Im Gegensatz zu XML hat HTML einen festen Satz von Tags, die fuer die Auszeichnung der Elementen verwendet werden koennen. Streng genommen ist HTML kein XML hat aber im wesentlichen die gleiche Struktur wie ein XML-Dokument. (Hierarchische Baumstruktur, Elemente, Tags, DOM).\nFuer XML gibt es viele standarte Werkzeuge, die XML Dokumente auf Wohlgeformtheit pruefen und porgrammatsich verarbeiten koennen, z.B. wie\n\nXML-Prozessor/Parser,\nXQuery: die standarde XML Abfrage- und Transformationssprache,\nXPath: Untersprache von XQuery, die XQuery unterstuetzt,\nXSLT: Sprache die speziell dazu geiegnet ist, XML Dokumente in andere Formate umzuwandeln.\n\nDiese Tools stehen in XML Datenbanken zur verfuegung und XML Datenbanken sind fuer die Arbeit mit XML-Dokumenten optimiert. Somit koennen HTML-Dokumente mit den etablierten zahlreichen XML Tools optimal verarbeitet werden, wenn sie in einer XML Datenbank gespeichert werden.\n\nEin weiterer Vorteil ist, dass eine XML-Datenbank kein oder nur ein vereinfachtes Datenschema (Beziehungsschema/Tabellen) braucht, da die Daten schon durch das Dateiformat strukturiert werden. Bei einer relationael Datenbank muss das Schema explizit definiert werden. D.h. um ein HTML-Dokument in einer RDB zu speichern, oder um ein Dokument aus einer RDB zu exportieren muss jedes mal eine Transformation zwischen der HTML-Darstellung und relationalen Darstellung des Dokuments durchgefuehrt werden. Weiterhin funktioniert die Abbildung zwischen den Dokument-orientierten und relationalen Modellen nicht immer gut und wird als object-relational impedence mismatch bezeichnet.\nVorteile:\n\nMan benoetigt kein vordefiniertes Schema\nKommt gut mit vielen Lese- und Schreibzugriffen zurecht.\n\nNachteile:\n\nGeringe konsistenzt/Gueltigkeit der Daten.\n\nWeil es weniger Einschraenkungen gibt, koennen die Abfragen nicht so gut optimiert werden wie bei den relationalen DBen."
  },
  {
    "objectID": "01/blatt01.html#feedback",
    "href": "01/blatt01.html#feedback",
    "title": "1  Blatt 1: Grundlagen der Relationalen Algebra",
    "section": "1.4 Feedback",
    "text": "1.4 Feedback\nRose, Dimitrov, Barthelmes\n\nAufgabe 1:\n    a) Ja, technisch gesehen erfüllen Datenbanken, die nur ein Tier enthalten, die 1 und 4, wäre halt nur besser gewesen, wenn ihr ein \"normales\" Beispiel mit mindestens 2 Tieren gewählt hättet :D\n\n9/9 Punkte\n\nAufgabe 2:\n    1. Es wird das MODELL gesucht, nicht der NAME :D Also A380\n    5. Nicht ganz, es sind eher alle Personen, die nicht für ein Flugzeug mit Reichweite &gt;10000 zugelassen sind.\n    6. \"Ungeeignet\"? Habt ihr nie von technischen Zwischenstopps gehört? :p\n    7. Nicht unbedingt Rundfahrten\n    8. \"... Länder aus, die einen Flughafen haben, aus dem...\"\n\n8/11 Punkte\n\nAufgabe 3:\n\nHabt ihr ChatGPT verwendet? Das sieht sehr nach ChatGPT aus...\n\n4/4 Punkte\n\nInsgesamt 21/24 Punkte"
  },
  {
    "objectID": "02/blatt02.html#relationale-algebra---fortsetzung",
    "href": "02/blatt02.html#relationale-algebra---fortsetzung",
    "title": "2  Blatt 2: Relationale Algebra und SQL",
    "section": "2.1 Relationale Algebra - Fortsetzung",
    "text": "2.1 Relationale Algebra - Fortsetzung\n\n\\(\\pi_{\\substack{\\texttt{pid, Name}}}\\bigl(\\sigma_{\\substack{\\texttt{Rolle=\"Pilot\"},\\\\ \\texttt{Reichweite}\\geq 15000}}(\\texttt{Personal}  \\bowtie \\texttt{Zulassung}  \\bowtie \\texttt{Modell})\\bigr)\\)\n\\(\\pi_{\\texttt{Name}}\\bigl(  \\sigma_{\\texttt{Land='USA'}}(  \\beta_{\\texttt{Code} \\leftarrow \\texttt{Ziel}}(\\texttt{Flug}) \\bowtie \\texttt{Flughafen} \\bowtie \\texttt{Flugzeug}  ) \\bigr)\\)\n\\(\\pi_{\\texttt{Code, Land}} \\Biggl(  \\sigma_{\\texttt{Name='F. Kohl'}}\\biggl(\\texttt{Flugzeug}  \\bowtie \\\\  \\Bigl(\\beta_{\\texttt{Code} \\leftarrow \\texttt{Start}}(\\pi_{\\texttt{Start, fid}}(\\texttt{Flug}))  \\cup  \\beta_{\\texttt{Code} \\leftarrow \\texttt{Ziel}}(\\pi_{\\texttt{Ziel, fid}}(\\texttt{Flug}))\\Bigr)\\biggr) \\biggr)\\)\n\\(\\pi_{\\texttt{pid, Name}}(\\texttt{Personal}) - \\\\  \\pi_{\\texttt{pid, Name}}(\\texttt{Personal} \\bowtie \\texttt{Crew} \\bowtie \\sigma_{\\texttt{Datum} &lt; \\texttt{07.04.2013}}(\\texttt{Flug}))\\)"
  },
  {
    "objectID": "02/blatt02.html#sql-anfragen",
    "href": "02/blatt02.html#sql-anfragen",
    "title": "2  Blatt 2: Relationale Algebra und SQL",
    "section": "2.2 SQL-Anfragen",
    "text": "2.2 SQL-Anfragen\n\nSQL:\nselect distinct C from R3\nErgebniss:\n       {{C: 7}, \n        {C: 8}}\nSQL:\nselect distinct * from R2\nwhere B = rot\nErgebniss::\n         {{B: rot, C: 9}}\n         {{B: blau, C: 8}}\nSQL:\nselect distinct * from R2\nintersect\nselect distinct * from R3;\nErgebniss:\n         {{B: blau}, {C: 7}}\nSQL:\nselect * from R2\nunion\nselect * from R3\nErgebniss:\n         {{B: blau,  C: 7}, \n         {B: rot,   C: 8}, \n         {B: rot,   C: 9}, \n         {B: gruen, C: 8}, \n         {B: gelb,  C: 7}}\nSQL:\nselect * from R3 except (\n    select * from R2\n);\nErgebniss:\n         {{B: gruen, C: 8}, \n         {B: gelb,  C: 7}}\nSQL:\nselect distinct * from\nR1 natural jo R2\nErgebniss:\n         {{A: q, B: rot, C: 8}, \n         {A: q, B: rot, C: 9}}\nSQL:\nselect distinct * from\nR1, R2\nErgebniss:\n        {{A: q, R1.B: rot,   R2.B: blau,  C: 7 },\n        {A: q, R1.B: rot,   R2.B: gruen, C: 8},\n        {A: q, R1.B: rot,   R2.B: gelb,  C: 7},\n        {A: r, R1.B: gruen, R2.B: gelb,  C: 7},\n        {A: r, R1.B: gruen, R2.B: gruen, C: 8},\n        {A: r, R1.B: gruen, R2.B: gelb,  C: 7}}"
  },
  {
    "objectID": "02/blatt02.html#entsprechungen-in-sql-und-der-relationalen-algebra",
    "href": "02/blatt02.html#entsprechungen-in-sql-und-der-relationalen-algebra",
    "title": "2  Blatt 2: Relationale Algebra und SQL",
    "section": "2.3 Entsprechungen in SQL und der relationalen Algebra",
    "text": "2.3 Entsprechungen in SQL und der relationalen Algebra\n\nDie Anfragen entsprechen sich liefern jedoch nicht das gleiche Ergebniss, da der SQL-Ausdruck Duplikate zulaesst, waehrend bei der relationalen Abfrage die Duplikate entfernt werden.\n\nDie SQL-Anfrage liefert die Bezeichnung der Modelle, die nach Flughafen ‘CDG’ fliegen/geflogen haben.\nDer relationale Ausdruck liefert die Sitzplatzkapazitaeten der selben Modelle aus der SQL-Anfrage.\n\nSomit sind die Ausdrucke nicht Aequivalent und sie entpsrechen sich nicht.\n\nDie erste SQL-Anrage gibt die ID’s der Co-Pilote und die Bezeichnungen der Modelle aus, dafuer sie zugelassen sind.\nDie zweite SQL-Anfrage gibt genau das gleiche Ergebniss wie die erste Anfrage. Man beachte, dass natural join in SQL immer von einem Kreuzprodukt und Selektionsoperationen simuliert werden kann.\n\nSomit sind die beiden Anfragen Aequivalent"
  },
  {
    "objectID": "02/blatt02.html#er-modell",
    "href": "02/blatt02.html#er-modell",
    "title": "2  Blatt 2: Relationale Algebra und SQL",
    "section": "2.4 ER-Modell",
    "text": "2.4 ER-Modell\nSee the diagrams\n\n\n\n\n\n\nZeile 1\n\n\n\n\n\n\n\nZeile 2\n\n\n\n\n\n\n\n\n\nZeile 3\n\n\n\n\n\n\n\nZeile 4\n\n\n\n\n\n\n\n\n\nZeile 5"
  },
  {
    "objectID": "02/blatt02.html#feedback",
    "href": "02/blatt02.html#feedback",
    "title": "2  Blatt 2: Relationale Algebra und SQL",
    "section": "2.5 Feedback",
    "text": "2.5 Feedback\nZur Aufgabe 1.\n\n1. Richtig, wenn auch &gt; statt &gt;= gemeint \n\n2. Richtig 3. Sollte passen 4. Richtig\n\nZur Aufgabe 2:\n\n1. Richtig 2. Ergebnis: Wieso B: Blau wenn ihr nach rot selektiert =&gt; - 0.25 P.\n\n3.-7. Richtig\n\nZur Aufgabe 3:\n\n1. Richtig unter der Annahme, dass Tabelle mehr als die abgedruckten Beispieldaten enthält (Stichwort Distinct)\n\n2. Ebenfalls richtig\n\n3. Dito\n\nZur Aufgab 4:\n\n1. Richtig 2. Verlage sollen laut ML bitte mindestens ein Buch verlegen =&gt; - 0.25P. 3. Laut ML bitte [1,*] =&gt; - 0.25 P.\n\n4. Richtig 5. Ebenfalls"
  },
  {
    "objectID": "03/blatt03.html#er-modellierung-staedte",
    "href": "03/blatt03.html#er-modellierung-staedte",
    "title": "3  Blatt 3: ER-Modellierung",
    "section": "3.1 ER-Modellierung: Staedte",
    "text": "3.1 ER-Modellierung: Staedte\nER-Schema: Stadt\n\n\n\nER-Schema: Stadt"
  },
  {
    "objectID": "03/blatt03.html#er-modellierung-filmstudio-datenbank",
    "href": "03/blatt03.html#er-modellierung-filmstudio-datenbank",
    "title": "3  Blatt 3: ER-Modellierung",
    "section": "3.2 ER-Modellierung: Filmstudio-Datenbank",
    "text": "3.2 ER-Modellierung: Filmstudio-Datenbank\n\nER-Schema Figure 3.1\n\n\n\n\nFigure 3.1: ER-Schema: NetMovie DB\n\n\n\nIntegriteatsbedingungen\n\ni.A. koennen die Wertebereiche der Attribute im ER-Diagram nicht spezifiert werden, z.B. wie\n\nErscheinungsjahr eines Films darf nicht in der Zukunft liegen oder ein sehr altes Datum wie 1776 sein.\nGage eines Regissuers muss &gt; 30,000 € sein\nGlobale Bedingungen wie z.B. Gesamtgehalt aus mehreren Filmen darf nie ueber 1000000 € sein koennen auch nicht spezifiziert werden.\n\nIn der Spezifikation heisst es, dass in jedem Film genau zwei Hauptrollen gibt. In unserem ER-Schema haben wir Hauptrolle als eine optionale Attribute des Beziehungstyps “wirkt-mit” modelliert. Diese Kardinalitaet kann somit nicht in unsrem ER-Schema bestimmt werden.\n\nAlternative Modellierungen\n\nGage als Attribute der Entitaet Film modellieren.\nEine neue Entitaet “Genre” einfuehren, und “arbeitet-in” Beziehungen zwischen Regisseur-Genre, und zwischen Schauspieler-Genre modellieren:"
  },
  {
    "objectID": "03/blatt03.html#feedback",
    "href": "03/blatt03.html#feedback",
    "title": "3  Blatt 3: ER-Modellierung",
    "section": "3.3 Feedback",
    "text": "3.3 Feedback\nPunkte: 29.0/30"
  },
  {
    "objectID": "04/blatt04.html#uebersetzung-eines-er-schemas",
    "href": "04/blatt04.html#uebersetzung-eines-er-schemas",
    "title": "4  Blatt 4: Uebersetzung ER-Schema in Relationenschemata",
    "section": "4.1 Uebersetzung eines ER-Schemas",
    "text": "4.1 Uebersetzung eines ER-Schemas\n\n\\(\\texttt{Addresse}(\\underline{\\texttt{Ad\\_ID}}\\texttt{,}\\, \\texttt{PLZ, Stadt, Strasse, Hausnr})\\)\n\\(\\texttt{MusikerIn}(\\underline{\\texttt{M\\_ID}}, \\texttt{Name, Geb\\_Datum, Ad\\_ID \\(\\rightarrow\\) Addresse)}\\)\n\\(\\texttt{Instrument}(\\underline{\\texttt{Name, Stimmung}})\\)\n\\(\\texttt{spielt}(\\underline{\\texttt{M\\_ID\\(\\rightarrow\\)MusikerIn, (Name, Stimmung)\\(\\rightarrow\\)Instrument}}, \\texttt{bevorzugt})\\)\n\\(\\texttt{Musikstueck}(\\underline{\\texttt{MS\\_ID}}, \\texttt{Titel, Laenge, M\\_ID\\(\\rightarrow\\)MusikerIn)}\\)\n\\(\\texttt{Album}(\\underline{\\texttt{A\\_ID}}, \\texttt{Titel, Release\\_Datum, Preis, Tracks, M\\_ID\\(\\rightarrow\\)MusikerIn)}\\)\n\\(\\texttt{erscheint}(\\underline{\\texttt{M\\_ID\\(\\rightarrow\\)Musikstueck, A\\_ID\\(\\rightarrow\\)Album}}, \\texttt{TrackNr})\\)\n\\(\\texttt{spielt\\_mit}(\\underline{\\texttt{M\\_ID\\(\\rightarrow\\)MusikerIn, MS\\_ID\\(\\rightarrow\\)Musikstueck}})\\)"
  },
  {
    "objectID": "04/blatt04.html#uebersetzung-eines-er-schemas-mit-hierarchien",
    "href": "04/blatt04.html#uebersetzung-eines-er-schemas-mit-hierarchien",
    "title": "4  Blatt 4: Uebersetzung ER-Schema in Relationenschemata",
    "section": "4.2 Uebersetzung eines ER-Schemas mit Hierarchien",
    "text": "4.2 Uebersetzung eines ER-Schemas mit Hierarchien\n\nRelationales Schema\n\n\n\\(\\texttt{Personal}(\\underline{\\texttt{Pers\\_ID}}, \\texttt{GebDat, Name, Vorname})\\)\n\\(\\texttt{MitarbeiterIn}(\\underline{\\texttt{Pers\\_ID\\(\\rightarrow\\)Personal}}, \\texttt{Bonus})\\)\n\\(\\texttt{KundIn}(\\underline{\\texttt{KundenID\\(\\rightarrow\\)Personal}}, \\texttt{Branche})\\)\n\\(\\texttt{ManagerIn}(\\underline{\\texttt{Pers\\_ID\\(\\rightarrow\\)MitarbeiterIn}}, \\texttt{Sektion})\\)\n\\(\\texttt{ProgrammiererIn}(\\underline{\\texttt{Pers\\_ID\\(\\rightarrow\\)MitarbeiterIn}}, \\texttt{Abschluss})\\)\n\\(\\texttt{Programmiersprache}(\\underline{\\texttt{ProgSP}})\\)\n\\(\\texttt{kann}(\\underline{\\texttt{ProgSP\\(\\rightarrow\\)Programmiersprache, Pers\\_ID\\(\\rightarrow\\)ProgrammiererIn}}, \\texttt{level})\\)\n\n\nWeitere Methoden fuer is-a:\n\n\n\nVorteil: Vermeidung der Redundanz und moeglichen Inkonsitenzenen, die dadurch enstehen koennen.\nNachteil: Erhoehter Rechenaufwand durch Zugriff auf Attribute der Oberentitaet nur mit Join.\n\n\nVorteil: Vermindertee Rechenaufwand durch direkten Zugriff auf Attribute ueber Tupel einziger Relation.\nNachteil: Redundante Speicherung der gleichen Informationen.\n\n\nVorteil: Vermindernde Komplexitaet des Datenbanks durch kleinere Anzahl von Relationen (eine Relation statt zwei oder drei)\nNachteil: Moegliche Inkonsitenzen durch den vielen Nullwerten, die von dem Nutzer bei Insertoperationen explizit als null gesetzt werden muessen."
  },
  {
    "objectID": "04/blatt04.html#feedback",
    "href": "04/blatt04.html#feedback",
    "title": "4  Blatt 4: Uebersetzung ER-Schema in Relationenschemata",
    "section": "4.3 Feedback",
    "text": "4.3 Feedback\nPunkte: 26/28\n\nZur Aufgabe 1:\n\nBei Fremdschlüsselverweisen auf Relationen (z.B. in MusikerIn bitte sowas wie wohnt-&gt;Adresse) schreiben =&gt; -2P.\n\nRest der 1. passt.\n\nZur Aufgabe 2:\n\nZur 1:\n\nPasst alles.\n\nZur 2:\n\nEbenfalls."
  },
  {
    "objectID": "05/blatt05.html#grundlegende-anfragen",
    "href": "05/blatt05.html#grundlegende-anfragen",
    "title": "5  Blatt 5: SQL-Anfragen",
    "section": "5.1 Grundlegende Anfragen",
    "text": "5.1 Grundlegende Anfragen\n\n\n\n\nselect real_name, created_at\nfrom twitter_user tu\nwhere typ = 'lobby' and \ndate(created_at) &lt;  timestamp '2009-06-30'\norder by created_at\n\n\nA 1.1\n\n\nreal_name\ncreated_at\n\n\n\n\nSascha Lobo\n2007-05-08 21:10:26\n\n\nnetzpolitik\n2007-10-24 14:34:50\n\n\nUlrich Müller\n2009-01-07 14:50:51\n\n\nMehr Demokratie e.V.\n2009-04-02 19:36:30\n\n\nCCC Updates\n2009-04-16 14:04:59\n\n\nabgeordnetenwatch.de\n2009-04-25 04:14:23\n\n\nLobbyControl\n2009-05-07 14:48:55\n\n\n\n\n\n\n\n\n\nselect twitter_name, like_count\nfrom twitter_user tu , tweet t \nwhere tu.id = t.author_id\nand t.like_count between 22000 and 25000;\n\n\nA 1.2\n\n\ntwitter_name\nlike_count\n\n\n\n\nn_roettgen\n22974\n\n\nn_roettgen\n24329\n\n\nSWagenknecht\n24656\n\n\nMAStrackZi\n22713\n\n\n\n\n\n\n\n\n\nselect distinct h.txt\nfrom \n    twitter_user tu , \n    tweet t , \n    hashtag_posting hp , \n    hashtag h \nwhere tu.id = t.author_id  and \n    t.id = hp.tweet_id and\n    hp.hashtag_id = h.id and \n    tu.real_name = 'LobbyControl' and \n    t.created_at between '2023-01-01' and '2023-01-15'\norder by h.txt \n\n\nA 1.3\n\n\ntxt\n\n\n\n\nampel\n\n\nautogipfel\n\n\nautolobby\n\n\nbundestag\n\n\neu\n\n\nexxon\n\n\nexxonknew\n\n\nkorruptionsskandal\n\n\nlindner\n\n\nlobbyregister\n\n\n\n\n\n\n\n\nselect *\nfrom hashtag h\nwhere h.id in (\n    select hp1.hashtag_id \n    from hashtag_posting hp1, hashtag_posting hp2\n    where hp1.tweet_id = hp2.tweet_id and\n    hp1.hashtag_id = hp2.hashtag_id and not\n    hp1.pos_start = hp2.pos_start\n)\nAnzahl der Ergebnisse:\n\n\n\nA 1.4 Anzahl der Ergebnisse\n\n\ncount\n\n\n\n\n437\n\n\n\n\n\n\n\n\n\nselect real_name, follower_count\nfrom twitter_user\nwhere created_at &lt;= '2010-01-01'\nand follower_count &gt;= all (\n    select follower_count\n    from twitter_user\n    where created_at &lt;= '2010-01-01'\n)\n\n\nA 1.5\n\n\nreal_name\nfollower_count\n\n\n\n\nSascha Lobo\n761419"
  },
  {
    "objectID": "05/blatt05.html#string-funktionen",
    "href": "05/blatt05.html#string-funktionen",
    "title": "5  Blatt 5: SQL-Anfragen",
    "section": "5.2 String-Funktionen",
    "text": "5.2 String-Funktionen\n\n\n\n\nselect txt \nfrom tweet\nwhere txt ilike '%openai%'\nand retweet_count &gt;= 20\n\n\nA 2.1\n\n\n\n\n\ntxt\n\n\n\n\nRT @DrScheuch: Die meisten Aerosolforscher haben damals schon sehr starke Zweifel am Sinn von Ausgangssperren geäußert, (#openairstattausgangssperre) wurden aber nicht gehört. @Karl_Lauterbach, die NoCovid Modellierer und @janoschdahmen waren die lautesten Befürworter. https://t.co/bL7QMaoyKP\n\n\nRT @_SilkeHahn: Guten Morgen: #OpenAI ist doch schon lange #ClosedAI. Seit der ersten Milliarde durch Microsoft 2019 lassen sie sich nicht mehr in die Karten schauen. @netzpolitik_org legt gekonnt den Finger in offene Wunden. Der “Technical Report” schweigt sich auf 98 https://t.co/ix1EYCAOKG… https://t.co/hAW5rbRUtH\n\n\n\n\n\n\n\n\n\nselect txt, char_length(txt) as Laenge\nfrom named_entity\nwhere char_length(txt) &gt;= all (\n    select char_length(txt)\n    from named_entity\n)\n\n\nA 2.2\n\n\ntxt\nlaenge\n\n\n\n\nArbeitsgemeinschaft Sozialdemokratischer Frauen\n47\n\n\n\n\n\n\n\n\n\nselect txt\nfrom named_entity\nwhere char_length(txt) &gt;= 4\nand txt like reverse(txt) \n\n\nA 2.3\n\n\ntxt\n\n\n\n\nDAAD\n\n\nGASAG\n\n\nCIMIC\n\n\nABBA"
  },
  {
    "objectID": "05/blatt05.html#exists-operatoren",
    "href": "05/blatt05.html#exists-operatoren",
    "title": "5  Blatt 5: SQL-Anfragen",
    "section": "5.3 Exists-Operatoren",
    "text": "5.3 Exists-Operatoren\n\n\n\nselect *\nfrom named_entity ne\nwhere not exists (\n    select *\n    from named_entity_posting nep \n    where nep.named_entity_id = ne.id \n)\nAnzahl der Ergebnisse:\n\n\n\nA 3.1 Anzahl der Ergebnisse\n\n\ncount\n\n\n\n\n621\n\n\n\n\n\n\n\n\n\nselect txt \nfrom tweet t\nwhere exists (\n    select *\n    from hashtag_posting hp, hashtag h \n    where hp.hashtag_id = h.id \n    and t.id = hp.tweet_id \n    and h.txt = 'klima'\n) and exists (\n    select *\n    from named_entity_posting nep, named_entity ne \n    where nep.named_entity_id = ne.id \n    and t.id = nep.tweet_id \n    and ne.txt = 'Berlin'\n)\n\n\nA 3.2\n\n\n\n\n\ntxt\n\n\n\n\n😸 Erinnerung: Bis 31.01.2023 um 23:59 (Europe/Berlin 🕛) könnt ihr noch Themenvorschläge zur #nr23 machen. Z.B. zu #Klima-,#Sozial-,#Sport-,#Medizin-, #Lokal-, #Nonprofit- #Datenjournalismus, #crossborder #Diversität #Pressefreiheit etc.\n\n\nCall for Papers: https://t.co/zyyNCsFC0y https://t.co/aDfQOzRG1W\n\n\nRT @DieLinke_HH: Das #Klima retten, nicht den #Kapitalismus! Heute haben wir mit 12.000 anderen in #Hamburg beim #Klimastreik protestiert. 👏\n\n\n\nKlare Ansage an Rot/Grün in Hamburg und die Ampel in Berlin: Der Stillstand bei der Klimapolitik muss aufhören! 🌿 https://t.co/jbfQrCcQuh | |So sieht die #Verkehrswende von @spdhh und @GRUENE_Hamburg aus🤦\nFrei nach Fairy Ultra: Während in Berlin schon das #9EuroTicket anläuft, werden in #Hamburg noch die Preise erhöht\nSoziale #Klimapolitik geht anders!\n@9euroforever #Klima @LinksfraktionHH https://t.co/Fi0eC8km1M |\n\n\n\n\n\n\nselect tu.twitter_name , tu.real_name\nfrom twitter_user tu \nwhere exists (\n    select *\n    from tweet t , conversation c \n    where t.author_id = tu.id and \n    t.id = c.id and \n    array_length(c.tweets, 1) &gt;= 70 and \n    t.created_at &gt;= '2023-02-15'\n)\n\n\nA 3.3\n\n\ntwitter_name\nreal_name\n\n\n\n\nsalomon_alex\nAlexander Salomon\n\n\nHendrikWuest\nHendrik Wüst"
  },
  {
    "objectID": "05/blatt05.html#aggregat-funktionen-und-gruppierung",
    "href": "05/blatt05.html#aggregat-funktionen-und-gruppierung",
    "title": "5  Blatt 5: SQL-Anfragen",
    "section": "5.4 Aggregat-Funktionen und Gruppierung",
    "text": "5.4 Aggregat-Funktionen und Gruppierung\n\n\n\nselect ne.id, ne.txt, count(*) as Anzahl\nfrom named_entity ne , named_entity_posting nep \nwhere ne.id = nep.named_entity_id \ngroup by ne.id \norder by count(*) desc\nAnzahl der Ergebnisse:\n\n\n\nA 4.1 Anzahl der Ergebnisse\n\n\ncount\n\n\n\n\n15744\n\n\n\n\n\n\n\n\nselect tu.real_name, count(*) as anzahl\nfrom twitter_user tu , tweet t\nwhere tu.id = t.author_id and \ntu.typ = 'politician' and \nt.created_at &gt; '2022-01-01' and\ntu.tweet_count &gt; 2000 \ngroup by tu.id\norder by anzahl desc\nAnzahl der Ergebnisse:\n\n\n\nA 4.2 Anzahl der Ergebnisse\n\n\nanzahl_der_ergebnisse\n\n\n\n\n913\n\n\n\n\n\n\n\n\n\nwith erg(id, anzahl) as (\n    select nep.tweet_id, count(*) anzahl\n    from named_entity_posting nep, tweet t \n    where nep.tweet_id = t.id\n    group by tweet_id \n    having count(*) &gt;= all (\n        select count(*)\n        from named_entity_posting nep \n        group by tweet_id  \n    )\n)\nselect created_at, txt\nfrom tweet\nwhere id in (\n  select id\n  from erg\n)\n\n\nA 4.3\n\n\n\n\n\n\ncreated_at\ntxt\n\n\n\n\n2023-01-06 07:50:05\nAdrian, Alexander, Ariturel, Björn, Christian, Christian, Christian, Christopher, Cornelia, Danny, Dirk, Frank, Heiko, Johannes, Kai, Katharina, Kurt, Maik, Martin, Michael, Oliver, Robbin, Roman, Sandra, Scott, Stefanie, Stefan, Stephan, Stephan, Sven.\n\n\n\nVerdächtig? 🕵️‍♂️ @cduberlin |\n\n\n\n\n\n\nselect date(created_at), count(*)\nfrom tweet\ngroup by date(created_at)\nhaving date(created_at) &gt; '2022-12-31'\nand count(*) &gt;= all (\n    select count(*)\n    from tweet\n    group by date(created_at)\n    having date(created_at) &gt; '2022-12-31'\n)\n\n\nA 4.4\n\n\ndate\ncount\n\n\n\n\n2023-01-25\n3568"
  },
  {
    "objectID": "05/blatt05.html#feedback",
    "href": "05/blatt05.html#feedback",
    "title": "5  Blatt 5: SQL-Anfragen",
    "section": "5.5 Feedback",
    "text": "5.5 Feedback\nPunkte: 42.5/43     \n\nZur Aufgabe 1:\n\n1.-5. Richtig\n\nZur Aufgabe 2:\n\n1.-3. Richtig\n\nZur Aufgabe 3:\n\n1.-3. Richtig\n\nZur Aufgabe 4:\n\n1. Richtig 2. Gemeint waren nur Tweets im Datensatz, sonst wäre das etwas einfach (mit HAVING anzahl &gt;2000) =- 0.5 P.\n\n3.-4. Richtig"
  },
  {
    "objectID": "06/blatt06.html#data-definition-language-ddl-und-rekursion-in-sql",
    "href": "06/blatt06.html#data-definition-language-ddl-und-rekursion-in-sql",
    "title": "6  Blatt 6: Rekursion, Relationale Algebra und SQL",
    "section": "6.1 Data Definition Language (DDL) und Rekursion in SQL",
    "text": "6.1 Data Definition Language (DDL) und Rekursion in SQL\n\n\n\ncreate table taxonomy(\n    id int,\n    name varchar,\n    primary key(id),\n    parent int,\n    foreign key (parent) references taxonomy(id)\n);\n\ninsert into taxonomy\nvalues \n    (0, 'animals', null),\n    (2, 'chordate', 0),\n    (1, 'athropod', 0),\n    (6, 'mammals', 2),\n    (5, 'reptiles', 2),\n    (3, 'insects', 1),\n    (4, 'crustacean', 1),\n    (9, 'carnivora', 6),\n    (8, 'scaled reptiles', 5),\n    (7, 'crocodiles', 5),\n    (10, 'cats', 9),\n    (11, 'pan-serpentes', 8);\n\n\n\n\nselect name\nfrom taxonomy \nwhere parent = 2\n  union\nselect name \nfrom taxonomy t1\nwhere exists (\n    select name\n    from taxonomy t2\n    where t1.parent = t2.id\n    and t2.parent = 2\n)\n\n\nA 1.2\n\n\nname\n\n\n\n\ncarnivora\n\n\nreptiles\n\n\ncrocodiles\n\n\nscaled reptiles\n\n\nmammals\n\n\n\n\n\n\n\n\n\nwith recursive subCatOfChordate(id, name) as (\n    select id, name\n    from taxonomy t\n    where t.parent = 2\n        union\n    select t.id, t.name\n    from taxonomy t, subCatOfChordate s\n    where t.parent = s.id\n) \nselect id\nfrom subcatofchordate \n\n\nA 1.2\n\n\nid\n\n\n\n\n6\n\n\n5\n\n\n9\n\n\n8\n\n\n7\n\n\n10\n\n\n11"
  },
  {
    "objectID": "06/blatt06.html#relationale-algebra-und-sql",
    "href": "06/blatt06.html#relationale-algebra-und-sql",
    "title": "6  Blatt 6: Rekursion, Relationale Algebra und SQL",
    "section": "6.2 Relationale Algebra und SQL",
    "text": "6.2 Relationale Algebra und SQL\n\n\n\n\nrel: \\(\\pi_{\\texttt{real\\_name, tweet\\_count, follower\\_count}}\\Bigl( \\\\ \\sigma_{\\texttt{created\\_at &gt; 01.01.2019, follower\\_count &gt; 8000, tweet\\_count &gt; 1000, like\\_count &gt; 1000}} \\\\(\\beta_{\\texttt{author\\_id} \\leftarrow \\texttt{id}}(\\texttt{twitter\\_user}) \\bowtie \\beta_{\\texttt{ca}\\leftarrow\\texttt{created\\_at}}(\\texttt{tweet})) \\Bigr)\\)\nsql:\n\n\nselect tu.real_name, tu.tweet_count, tu.follower_count\nfrom twitter_user tu \nwhere tu.created_at &gt; '2019-01-01'\nand tu.follower_count &gt; 8000\nand tu.tweet_count &gt; 1000\nand exists (\n    select *\n    from tweet t \n    where t.author_id = tu.id \n    and t.like_count &gt; 1000\n)\n\n\nA 2.1\n\n\nreal_name\ntweet_count\nfollower_count\n\n\n\n\nRote Socke Türk-Nachbaur\n16692\n21283\n\n\nUrsula von der Leyen\n3675\n1295550\n\n\nVerteidigungsministerium\n8923\n120387\n\n\nCarmen Wegge\n1029\n9355\n\n\n\n\n\n\n\n\n\nrel: \\(\\pi_{\\texttt{txt, author\\_id, created\\_at}}(\\sigma_{\\texttt{like\\_count &gt; 1000}}(\\texttt{tweet}) - \\\\ \\pi_{\\texttt{txt, author\\_id, created\\_at}}\\Bigl(\\\\ \\sigma_{\\texttt{created\\_at &gt; ca}}\\bigl(\\sigma_{\\texttt{like\\_count &gt; 1000}}(\\texttt{tweet}) \\times \\beta_{\\texttt{ca} \\leftarrow \\texttt{created\\_at}, \\texttt{ai}\\leftarrow \\texttt{author\\_id}, \\texttt{t} \\leftarrow \\texttt{txt}}(\\sigma_{\\texttt{like\\_count &gt; 1000}}(\\texttt{tweet}))\\bigr)\\Bigr)\\)\nsql:\n\n\nselect t.txt, t.author_id, t.created_at \nfrom tweet t\nwhere t.like_count &gt;= 1000\nand t.created_at &lt;= all (\n    select created_at \n    from tweet\n    where like_count &gt;= 1000\n)\n\n\nA 2.3\n\n\n\n\n\n\n\ntxt\nauthor_id\ncreated_at\n\n\n\n\nDie Leute haben heute aus Trotz geböllert, oder? Das nahm ja kein Ende. 😄😂 Genial! Danke. ⭐️🎆\n814970546366611457\n2023-01-01 00:17:32\n\n\n\n\n\n\n\n\n\nrel: \\(\\pi_{\\texttt{hi, hashtag\\_id}}\\Biggl(\\sigma_{\\texttt{ti &lt; tweet\\_id}}\\Bigl(\\\\ \\beta_{\\texttt{ti} \\leftarrow \\texttt{tweet\\_id}}\\bigl( \\sigma_{\\texttt{hi &lt; hashtag\\_posting}}(\\texttt{hashtag\\_posting} \\bowtie \\beta_{\\texttt{hi} \\leftarrow \\texttt{hashtag\\_id}}(\\texttt{hashtag\\_posting}))\\bigr) \\\\ \\bowtie \\\\ \\sigma_{\\texttt{hi &lt; hashtag\\_posting}}(\\texttt{hashtag\\_posting} \\bowtie \\beta_{\\texttt{hi} \\leftarrow \\texttt{hashtag\\_id}}(\\texttt{hashtag\\_posting}))\\Bigr)\\Biggr)\\)\nsql:\n\nwith hashtagpairs as (\n    select \n        hp1.hashtag_id h1_id, \n        h1.txt h1_txt, \n        hp2.hashtag_id  h2_id, \n        h2.txt h2_txt, \n        hp1.tweet_id tid\n    from hashtag_posting hp1, hashtag_posting hp2, hashtag h1, hashtag h2\n    where hp1.tweet_id  = hp2.tweet_id\n    and h1.id = hp1.hashtag_id \n    and h2.id = hp2.hashtag_id \n    and hp1.hashtag_id  &lt; hp2.hashtag_id \n)\nselect hpr1.h1_txt, hpr1.h2_txt\nfrom hashtagpairs hpr1\nwhere exists (\n    select *\n    from hashtagpairs hpr2\n    where hpr1.h1_id = hpr2.h1_id\n    and hpr1.h2_id = hpr2.h2_id\n    and hpr1.tid &lt; hpr2.tid\n) \n\n\n\nA 3.3 Anzahl der Ergebnisse\n\n\ncount\n\n\n\n\n178346"
  },
  {
    "objectID": "06/blatt06.html#regulaere-ausdruecke-in-sql",
    "href": "06/blatt06.html#regulaere-ausdruecke-in-sql",
    "title": "6  Blatt 6: Rekursion, Relationale Algebra und SQL",
    "section": "6.3 Regulaere Ausdruecke in SQL",
    "text": "6.3 Regulaere Ausdruecke in SQL\n\nselect tu.real_name, regexp_count(t.txt, '\\m[[:upper:]]{2,}\\M') as cnt, t.txt\nfrom tweet t, twitter_user tu \nwhere tu.typ = 'politician'\nand t.author_id  = tu.id\nand regexp_count(t.txt, '\\m[[:upper:]]{2,}\\M') &gt;= all (\n    select regexp_count(txt, '\\m[[:upper:]]{2,}\\M')\n    from tweet\n)\n\n\nA 3\n\n\n\n\n\n\n\nreal_name\ncnt\ntxt\n\n\n\n\nUdo Hemmelgarn, MdB\n41\nRT @Georg_Pazderski: BITTE BITTE BITTE BITTE\n\n\n\nBITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE BITTE https://t.co/snBGvZGABI |"
  },
  {
    "objectID": "06/blatt06.html#feedback",
    "href": "06/blatt06.html#feedback",
    "title": "6  Blatt 6: Rekursion, Relationale Algebra und SQL",
    "section": "6.4 Feedback",
    "text": "6.4 Feedback\nPunkte: 33/33\n\nZur Aufgabe 1:\n\n1.-3. Richtig\n\nZur Aufgabe 2:\n\n1.-3. Richtig\n\nZur Aufgabe 3:\n\nGeht einfacher, aber richtig."
  },
  {
    "objectID": "07/blatt07.html#fortgeschrittene-sql-anfragen",
    "href": "07/blatt07.html#fortgeschrittene-sql-anfragen",
    "title": "7  Blatt 7: SQL und Anfragesprachen",
    "section": "7.1 Fortgeschrittene SQL-Anfragen",
    "text": "7.1 Fortgeschrittene SQL-Anfragen\n\n\n\n\nselect tu.real_name , tu.twitter_name \nfrom twitter_user tu \nwhere tu.typ = 'politician'\nand exists (\n    select *\n    from twitter_user tu2 \n    where tu2.twitter_name &lt;&gt; tu.twitter_name \n    and tu2.real_name = tu.real_name \n)\n\n\nA1.1\n\n\nreal_name\ntwitter_name\n\n\n\n\nMartin Hagen\n_MartinHagen\n\n\nMartin Hagen\nMartinHagenHB\n\n\n\n\n\n\n\n\n\nselect \n    tu.real_name real_name,\n    tu.twitter_name twitter_name,\n    tu.follower_count follower_count,\n    tu.tweet_count tweet_count,\n    array_length(c.tweets, 1) conversation_length\nfrom tweet t, conversation c, twitter_user tu \nwhere t.id = c.id\nand tu.id = t.author_id \nand array_length(c.tweets, 1) &gt;= all (\n    select array_length(c2.tweets, 1)\n    from conversation c2\n)\n\n\nA1.2\n\n\n\n\n\n\n\n\n\nreal_name\ntwitter_name\nfollower_count\ntweet_count\nconversation_length\n\n\n\n\nTom Schreiber\nTomSchreiberMdA\n5328\n48186\n86\n\n\nChristian Lindner\nc_lindner\n653690\n18882\n86\n\n\n\n\n\n\n\n\n\nselect ne.txt, ne.id, count(*)\nfrom \n    tweet t, \n    hashtag_posting hp, \n    hashtag h, \n    named_entity ne,\n    named_entity_posting nep \nwhere t.id = hp.tweet_id \nand hp.hashtag_id = h.id \nand h.txt ilike 'energie'\nand nep.tweet_id = t.id\nand nep.named_entity_id = ne.id\ngroup by ne.txt, ne.id\nhaving count(*) &gt;= 4\norder by count(*) desc\n\n\nA1.3\n\n\ntxt\nid\ncount\n\n\n\n\nDeutschland\n31\n18\n\n\nBayern\n240\n7\n\n\nThüringen\n526\n6\n\n\nAnschluss\n1741\n5\n\n\nBerlin\n2\n4\n\n\nBernhard Stengele\n11253\n4\n\n\nCDU\n65\n4\n\n\nEuropa\n217\n4\n\n\nBund\n655\n4\n\n\n\n\n\n\n\n\n\nselect\n    ne.id entity_id,\n    ne.txt entity_txt,\n    date(t.created_at) datum,\n    count(*) anzahl\nfrom \n    tweet t ,\n    named_entity_posting nep ,\n    named_entity ne \nwhere t.id = nep.tweet_id \nand ne.id =nep.named_entity_id \ngroup by ne.id, ne.txt, date(t.created_at)\norder by count(*) desc \nlimit 5\n\n\nA1.4\n\n\nentity_id\nentity_txt\ndatum\nanzahl\n\n\n\n\n6\nUkraine\n2023-02-24\n761\n\n\n2\nBerlin\n2023-02-12\n427\n\n\n28\nBundestag\n2023-03-17\n286\n\n\n2\nBerlin\n2023-02-10\n283\n\n\n1425\nCSU\n2023-03-17\n259"
  },
  {
    "objectID": "07/blatt07.html#relationale-algebra-und-tupelkalkuel",
    "href": "07/blatt07.html#relationale-algebra-und-tupelkalkuel",
    "title": "7  Blatt 7: SQL und Anfragesprachen",
    "section": "7.2 Relationale Algebra und Tupelkalkuel",
    "text": "7.2 Relationale Algebra und Tupelkalkuel\n\n\n\n\numg: Was sind die echten Namen von allen Twitter Benutzern, die Lobbyisten sind, die einen Tweet mit ueber 2000 Likes veroeffentlicht haben, der die EU oder die USA erwaehnt?\ntup:\n\n\\[\\begin{align*}\n  \\{\\langle\\texttt{tu.real\\_name}\\rangle \\mid & \\texttt{tu} \\in \\texttt{twitter\\_user} \\wedge \\texttt{tu.typ='lobby'} \\wedge \\exists\\texttt{t}\\exists\\texttt{ne}\\exists\\texttt{nep} (\\\\\n  &\\quad\\quad \\texttt{t} \\in \\texttt{tweet}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{ne} \\in \\texttt{named\\_entity}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{nep}\\in\\texttt{named\\_entity\\_posting}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{t.id = nep.tweet\\_id}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{ne.id = nep.named\\_entity\\_id}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{t.like\\_count &gt; 2000}\\, \\wedge \\\\\n  &\\quad\\quad \\texttt{t.author\\_id = tu.id}\\, \\wedge \\\\\n  &\\quad\\quad (\\texttt{ne.txt = 'EU'} \\vee \\texttt{ne.txt = 'USA})) \\}\n\\end{align*}\\]\n\n\n\n\numg: Was sind die IDs aller Authoren, die zwar einen Tweet mit dem Hashtag “openai” verfasst haben aber keinen mit dem Hashtag “chatgpt”.\ntup:\n\n\\[\\begin{align*}\n  \\{\\langle\\texttt{t.author\\_id}\\rangle \\mid & \\texttt{t} \\in \\texttt{tweet} \\wedge\\exists\\texttt{h}\\exists\\texttt{hp} ( \\\\\n                     &\\quad\\quad \\texttt{h} \\in\\texttt{hashtag}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{hp} \\in\\texttt{hashtag\\_posting}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{h.id = hp.hashtag\\_id}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{hp.tweet\\_id = t.id}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{h.txt = 'openai'})\\, \\wedge \\\\\n                     &\\quad\\quad \\neg\\exists\\texttt{h}\\exists\\texttt{hp}( \\\\\n                     &\\quad\\quad \\texttt{h} \\in\\texttt{hashtag}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{hp} \\in\\texttt{hashtag\\_posting}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{h.id = hp.hashtag\\_id}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{hp.tweet\\_id = t.id}\\, \\wedge \\\\\n                     &\\quad\\quad \\texttt{h.txt = 'chatgpt'} )\\}\n  \\end{align*}\\]"
  },
  {
    "objectID": "07/blatt07.html#feedback",
    "href": "07/blatt07.html#feedback",
    "title": "7  Blatt 7: SQL und Anfragesprachen",
    "section": "7.3 Feedback",
    "text": "7.3 Feedback\nPunkte: 28/28"
  },
  {
    "objectID": "08/blatt08.html#seiten-und-saetze",
    "href": "08/blatt08.html#seiten-und-saetze",
    "title": "8  Blatt 8: Physiche Datenorganisation und Baeume",
    "section": "8.1 Seiten und Saetze",
    "text": "8.1 Seiten und Saetze\n\nSatzlaenge twitter_user\n\n\n\n\n\n\n\n\nAttribute\nTyp\nSatzlaenge\n\n\n\n\nid\nbigint\n8 byte\n\n\nfollower_count\ninteger\n4 byte\n\n\ntweet_count\ninteger\n4 byte\n\n\ntyp\nchar(11)/char(5) “politician”/“lobby”\n12 byte (1 byte Overhead)\n\n\ncreated_at\ntimestamp\n8 byte\n\n\ntwitter_name\ntext\n12 byte\n\n\nreal_name\ntext\n18 byte\n\n\n—\n—\n—\n\n\n\\(\\sum\\)\n\n54 byte\n\n\n\nSpeicherplatz der Header\n\nJede Page hat 24 Byte Header\nJedes Tupel hat 23 Byte Header\n\nD.h. jedes Tupel hat 54 Byte Nutzdaten + 23 Byte Header = 77 Byte.\nGroesse der Bloecke im PostgreSQL:\n\n\nselect current_setting('block_size');\n\n\nblock size\n\n\ncurrent_setting\n\n\n\n\n8192\n\n\n\n\n\n\nselect count(*)\nfrom twitter_user\n\n\nAnzahl der Tupel in der Relation twitter user\n\n\ncount\n\n\n\n\n1825\n\n\n\n\n\nAnzahl der Tupel pro Seite ca.:\n\nround(8192 / 77)\n\n[1] 106\n\n\nSomit ist die Anzahl der Seiten ungefaehr:\n\nround(1825 / 106)\n\n[1] 17\n\n\n\nAnzahl der Seiten der Relation `twitter_user’:\n\n\nselect relname, relpages \nfrom pg_class\nwhere relname = 'twitter_user'\n\n\nAnzahl der Seiten fuer twitter user\n\n\nrelname\nrelpages\n\n\n\n\ntwitter_user\n22\n\n\n\n\n\nAlso in Wirklichkeit werden 22 Seiten gebraucht statt 17 Seiten. D.h. mehr Speicher. Die Gruende dieser Abweichung sind u.a. mehr Speicher fuer:\n\nPageheader\nZeiger auf die Tupel\nSpecial-/Free Space in Pages\nOptionalen Zusatzelementen wie Null Bitmap in den Tuples"
  },
  {
    "objectID": "08/blatt08.html#b-baeume",
    "href": "08/blatt08.html#b-baeume",
    "title": "8  Blatt 8: Physiche Datenorganisation und Baeume",
    "section": "8.2 B-Baeume",
    "text": "8.2 B-Baeume\n\nB-Baum 1.1 Figure 8.1\n\n\n\n\nFigure 8.1: B-Baum: A2.1\n\n\n\nB-Baum 1.2 Figure 8.2\n\n\n\n\nFigure 8.2: B-Baum: A2.1"
  },
  {
    "objectID": "08/blatt08.html#textb-baeume",
    "href": "08/blatt08.html#textb-baeume",
    "title": "8  Blatt 8: Physiche Datenorganisation und Baeume",
    "section": "8.3 \\(\\text{B}^{+}\\)-Baeume",
    "text": "8.3 \\(\\text{B}^{+}\\)-Baeume\n\nB+-Baum 3.1 Figure 8.3\n\n\n\n\nFigure 8.3: B-Baum: A2.1\n\n\n\nDie Elemente in der sortierten Reihenfolge in den B+ Baum einfuegen, aber nicht durch ein normales Insert, sondern direkt an das Blatt ganz rechts einfuegen. Dadurch spart man sich die look-up Operation \\(\\mathcal{O}(\\log_m(n))\\) des insert, die ein groeseres Element als die bisherigen sowieso ganz rechts in Baum ablegen wuerde."
  },
  {
    "objectID": "08/blatt08.html#feedback",
    "href": "08/blatt08.html#feedback",
    "title": "8  Blatt 8: Physiche Datenorganisation und Baeume",
    "section": "8.4 Feedback",
    "text": "8.4 Feedback\nPunkte: 19.5/24.0\n- A1: 5.0/8.0\n- A2: 6.5/8.0\n- A3: 8.0/8.0          \n\nZur Aufgabe 1:\n\n1. typ hat Länge 4, da enum =&gt; -0.5 P.\n\n2. Tupel Header richtig, Attribut-Größe fehlt =&gt; -0.5 P.\n\n3. So war die Aufgabe nicht gemeint, man sollte aus den Werten der 1. und 2. das Ausrechnen =&gt; -2 P.\n\n4. Richtig\n\nZur Aufgabe 2:\n\n1. Richtig 2. Beide Varianten nicht ganz richtig:\n\nGrundstruktur teilweise richtig: Links sehr nah an ML man müsste nur 43 und 37 tauschen (der angesprochene Leichtsinnsfehler), rechts bei Löschen eines Nicht-Blattknotens wird Element durch (längen-)lexikographisch nächst kleineres Element ersetzt, in diesem Fall die 47. Ab dann ändert sich logischerweise auch euer Baum im Vergleich zur ML.\n\n =&gt; -1.5 P.\n\nZur Aufgabe 3:\n\n1. Diese Woche war die ML falsch, deswegen habe ich hier einen Fehler beim Korrigieren gemacht. Nur Ma zu M wäre schön.\n\n2. Habe ich übersehen, ist richtig."
  }
]